---
source: crates/compiler-test/src/lexer.rs
expression: token
---
[
    Token {
        lexeme: "fun",
        ty: FuncDecl,
        span: Span {
            start: 0,
            end: 2,
            line: 1,
            column: 1,
        },
    },
    Token {
        lexeme: "suc",
        ty: Identifier,
        span: Span {
            start: 4,
            end: 6,
            line: 1,
            column: 5,
        },
    },
    Token {
        lexeme: "nat",
        ty: NatDecl,
        span: Span {
            start: 8,
            end: 10,
            line: 1,
            column: 9,
        },
    },
    Token {
        lexeme: "x",
        ty: Identifier,
        span: Span {
            start: 12,
            end: 12,
            line: 1,
            column: 13,
        },
    },
    Token {
        lexeme: "->",
        ty: Arrow,
        span: Span {
            start: 13,
            end: 14,
            line: 1,
            column: 14,
        },
    },
    Token {
        lexeme: "T",
        ty: Literal,
        span: Span {
            start: 15,
            end: 15,
            line: 1,
            column: 16,
        },
    },
    Token {
        lexeme: "?",
        ty: QuestionMark,
        span: Span {
            start: 16,
            end: 16,
            line: 1,
            column: 17,
        },
    },
    Token {
        lexeme: "x",
        ty: Identifier,
        span: Span {
            start: 17,
            end: 17,
            line: 1,
            column: 18,
        },
    },
    Token {
        lexeme: "+",
        ty: Plus,
        span: Span {
            start: 18,
            end: 18,
            line: 1,
            column: 19,
        },
    },
    Token {
        lexeme: "1",
        ty: Literal,
        span: Span {
            start: 19,
            end: 19,
            line: 1,
            column: 20,
        },
    },
    Token {
        lexeme: ":",
        ty: Colon,
        span: Span {
            start: 20,
            end: 20,
            line: 1,
            column: 21,
        },
    },
    Token {
        lexeme: "0",
        ty: Literal,
        span: Span {
            start: 21,
            end: 21,
            line: 1,
            column: 22,
        },
    },
    Token {
        lexeme: ";",
        ty: Semicolon,
        span: Span {
            start: 22,
            end: 22,
            line: 1,
            column: 23,
        },
    },
    Token {
        lexeme: "T",
        ty: Literal,
        span: Span {
            start: 24,
            end: 24,
            line: 2,
            column: 1,
        },
    },
    Token {
        lexeme: "?",
        ty: QuestionMark,
        span: Span {
            start: 25,
            end: 25,
            line: 2,
            column: 2,
        },
    },
    Token {
        lexeme: "(",
        ty: LeftParen,
        span: Span {
            start: 26,
            end: 26,
            line: 2,
            column: 3,
        },
    },
    Token {
        lexeme: "suc",
        ty: Identifier,
        span: Span {
            start: 27,
            end: 29,
            line: 2,
            column: 4,
        },
    },
    Token {
        lexeme: "0",
        ty: Literal,
        span: Span {
            start: 31,
            end: 31,
            line: 2,
            column: 8,
        },
    },
    Token {
        lexeme: ")",
        ty: RightParen,
        span: Span {
            start: 32,
            end: 32,
            line: 2,
            column: 9,
        },
    },
    Token {
        lexeme: "+",
        ty: Plus,
        span: Span {
            start: 33,
            end: 33,
            line: 2,
            column: 10,
        },
    },
    Token {
        lexeme: "2",
        ty: Literal,
        span: Span {
            start: 34,
            end: 34,
            line: 2,
            column: 11,
        },
    },
    Token {
        lexeme: ":",
        ty: Colon,
        span: Span {
            start: 35,
            end: 35,
            line: 2,
            column: 12,
        },
    },
    Token {
        lexeme: "0",
        ty: Literal,
        span: Span {
            start: 36,
            end: 36,
            line: 2,
            column: 13,
        },
    },
    Token {
        lexeme: "+",
        ty: Plus,
        span: Span {
            start: 37,
            end: 37,
            line: 2,
            column: 14,
        },
    },
    Token {
        lexeme: "1",
        ty: Literal,
        span: Span {
            start: 38,
            end: 38,
            line: 2,
            column: 15,
        },
    },
]
