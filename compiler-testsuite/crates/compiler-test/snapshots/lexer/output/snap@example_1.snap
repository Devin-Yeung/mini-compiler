---
source: crates/compiler-test/src/lexer.rs
expression: token
---
[
    Token {
        lexeme: "[This is a good example.]",
        ty: Comment,
        span: Span {
            start: 0,
            end: 24,
            line: 1,
            column: 1,
        },
    },
    Token {
        lexeme: "fun",
        ty: FuncDecl,
        span: Span {
            start: 26,
            end: 28,
            line: 2,
            column: 1,
        },
    },
    Token {
        lexeme: "suc",
        ty: Identifier,
        span: Span {
            start: 30,
            end: 32,
            line: 2,
            column: 5,
        },
    },
    Token {
        lexeme: "nat",
        ty: NatDecl,
        span: Span {
            start: 34,
            end: 36,
            line: 2,
            column: 9,
        },
    },
    Token {
        lexeme: "x",
        ty: Identifier,
        span: Span {
            start: 38,
            end: 38,
            line: 2,
            column: 13,
        },
    },
    Token {
        lexeme: "->",
        ty: Arrow,
        span: Span {
            start: 40,
            end: 41,
            line: 2,
            column: 15,
        },
    },
    Token {
        lexeme: "T",
        ty: Literal,
        span: Span {
            start: 43,
            end: 43,
            line: 2,
            column: 18,
        },
    },
    Token {
        lexeme: "?",
        ty: QuestionMark,
        span: Span {
            start: 45,
            end: 45,
            line: 2,
            column: 20,
        },
    },
    Token {
        lexeme: "x",
        ty: Identifier,
        span: Span {
            start: 47,
            end: 47,
            line: 2,
            column: 22,
        },
    },
    Token {
        lexeme: "+",
        ty: Plus,
        span: Span {
            start: 49,
            end: 49,
            line: 2,
            column: 24,
        },
    },
    Token {
        lexeme: "1",
        ty: Literal,
        span: Span {
            start: 51,
            end: 51,
            line: 2,
            column: 26,
        },
    },
    Token {
        lexeme: ":",
        ty: Colon,
        span: Span {
            start: 53,
            end: 53,
            line: 2,
            column: 28,
        },
    },
    Token {
        lexeme: "0",
        ty: Literal,
        span: Span {
            start: 55,
            end: 55,
            line: 2,
            column: 30,
        },
    },
    Token {
        lexeme: ";",
        ty: Semicolon,
        span: Span {
            start: 56,
            end: 56,
            line: 2,
            column: 31,
        },
    },
    Token {
        lexeme: "T",
        ty: Literal,
        span: Span {
            start: 58,
            end: 58,
            line: 3,
            column: 1,
        },
    },
    Token {
        lexeme: "?",
        ty: QuestionMark,
        span: Span {
            start: 60,
            end: 60,
            line: 3,
            column: 3,
        },
    },
    Token {
        lexeme: "(",
        ty: LeftParen,
        span: Span {
            start: 62,
            end: 62,
            line: 3,
            column: 5,
        },
    },
    Token {
        lexeme: "suc",
        ty: Identifier,
        span: Span {
            start: 63,
            end: 65,
            line: 3,
            column: 6,
        },
    },
    Token {
        lexeme: "0",
        ty: Literal,
        span: Span {
            start: 67,
            end: 67,
            line: 3,
            column: 10,
        },
    },
    Token {
        lexeme: ")",
        ty: RightParen,
        span: Span {
            start: 68,
            end: 68,
            line: 3,
            column: 11,
        },
    },
    Token {
        lexeme: "+",
        ty: Plus,
        span: Span {
            start: 70,
            end: 70,
            line: 3,
            column: 13,
        },
    },
    Token {
        lexeme: "2",
        ty: Literal,
        span: Span {
            start: 72,
            end: 72,
            line: 3,
            column: 15,
        },
    },
    Token {
        lexeme: ":",
        ty: Colon,
        span: Span {
            start: 74,
            end: 74,
            line: 3,
            column: 17,
        },
    },
    Token {
        lexeme: "0",
        ty: Literal,
        span: Span {
            start: 76,
            end: 76,
            line: 3,
            column: 19,
        },
    },
    Token {
        lexeme: "+",
        ty: Plus,
        span: Span {
            start: 78,
            end: 78,
            line: 3,
            column: 21,
        },
    },
    Token {
        lexeme: "1",
        ty: Literal,
        span: Span {
            start: 80,
            end: 80,
            line: 3,
            column: 23,
        },
    },
]
